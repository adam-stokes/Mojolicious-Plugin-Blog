{"name":"Mojolicious::Plugin::Blog","tagline":"Blog plugin for Mojolicious - quick, simple, ready to go.","body":"NAME\r\n    Mojolicious::Plugin::Blog - Mojolicious Plugin\r\n\r\nSYNOPSIS\r\n      # Mojolicious\r\n\r\n      # Set authentication condition\r\n      my $conditions = {\r\n        authenticated => sub {\r\n            my $self = shift;\r\n            unless ($self->session('authenticated')) {\r\n                $self->flash(\r\n                    class   => 'alert alert-info',\r\n                    message => 'Please log in first!'\r\n                );\r\n                $self->redirect_to('/login');\r\n                return;\r\n            }\r\n            return 1;\r\n        },\r\n      };\r\n\r\n      $self->plugin('Blog' => {\r\n          authCondition => $conditions\r\n          dsn => \"dbi:SQLite:dbname=db/myblog.db\",\r\n        }\r\n      );\r\n\r\n      # Mojolicious::Lite\r\n      plugin 'Blog' => {\r\n        authCondition => $conditions,\r\n        dsn => \"dbi:SQLite:dbname=db/myblog.db\",\r\n      };\r\n\r\n      # Pre-populate db\r\n      ./bin/mojo-blog-db sqlite db/myblog.db\r\n\r\n      # Running the example\r\n      morbo ./eg/tiniblog\r\n\r\n      # See available routes\r\n      ./eg/tiniblog routes\r\n\r\n### DESCRIPTION\r\n\r\n    Mojolicious::Plugin::Blog is a Mojolicious plugin. The database layer is\r\n    using DBIx::ResultSet so support for most databases is available. The\r\n    examples in this distribution utilize Postgres.\r\n\r\n### OPTIONS\r\n\r\n    The blog options provide the gateway into defining your routes, database\r\n    connection, authentication conditions, blog title, slogan, and more.\r\n\r\n  `title'\r\n    \r\n    Your blog title.\r\n\r\n  `slogan'\r\n    \r\n    Blog slogan.\r\n\r\n  `author'\r\n    \r\n    Who are you?\r\n\r\n  `contact'\r\n    \r\n    Your email\r\n\r\n  `tz'\r\n    \r\n    What timezone are you? e.g. 'America/New_York' for EST.\r\n\r\n  `social'\r\n    Not implemented yet. However, support for integrating github, coderwall,\r\n    twitter, and others coming soon.\r\n\r\n        # Social Integration options\r\n        social => {\r\n            github    => 'battlemidget',\r\n            coderwall => 'battlemidget',\r\n            twitter   => 'ajscg',\r\n        },\r\n\r\n  `dsn'\r\n    \r\n    Database URI\r\n\r\n  `dbuser'\r\n    \r\n    Database User\r\n\r\n  `dbpass'\r\n    \r\n    Database password\r\n\r\n  `dbconn'\r\n    \r\n    Database connection, doesn't need to be manually set.\r\n\r\n  `dbrs'\r\n    \r\n    Database Resultset, again doesn't need to be set unless you implement\r\n    your own database layer.\r\n\r\n  `indexPath'\r\n    \r\n    Blog index route\r\n\r\n  `archivePath'\r\n    \r\n    Blog archive path\r\n\r\n  `postPath'\r\n    \r\n    Blog detail post path\r\n\r\n  `adminPathPrefix'\r\n    \r\n    Blog admin prefix route\r\n\r\n  `namespace'\r\n    \r\n    Blog controller namespace.\r\n\r\n  `authCondition'\r\n    \r\n    Router bridge for authencating the blog admin section. See the SYNOPSIS\r\n    for example.\r\n\r\n  `renderType'\r\n    \r\n    Not Implemented, however the thought behind this was to allow return\r\n    JSON in case someone wanted to override existing templates.\r\n\r\n### METHODS\r\n\r\n    Mojolicious::Plugin::Blog inherits all methods from Mojolicious::Plugin\r\n    and implements the following new ones.\r\n\r\n  register\r\n      \r\n    $plugin->register(Mojolicious->new);\r\n    Register plugin in Mojolicious application.\r\n\r\n### WHAT WORKS\r\n\r\n    Examples are included to show a working copy of the blog plugin for\r\n    viewing blog posts, creating/updating/deleting posts. As well as a\r\n    elementary way of authenticating to show the working admin portion.\r\n\r\n### TODO\r\n\r\n    * Add form validation\r\n    * Make default pages look less 1990s.\r\n\r\n### GOALS\r\n\r\n    Hopefully make this as database agnostic as possible and the overall\r\n    plugin a useful starting point for those wishing to implement a blog in\r\n    Mojolicious.\r\n\r\n### PATCHES\r\n\r\n    I love patches and community involvement, so please get involved and\r\n    submit pull requests and issues at\r\n\r\n    https://github.com/battlemidget/Mojolicious-Plugin-Blog\r\n\r\n### SEE ALSO\r\n\r\n    Mojolicious, Mojolicious::Guides, http://mojolicio.us.\r\n\r\n### COPYRIGHT AND LICENSE\r\n\r\n    This plugin is copyright (c) 2013 by Adam Stokes <adamjs@cpan.org>\r\n\r\n    This is free software; you can redistribute it and/or modify it under\r\n    the same terms as the Perl 5 programming language system itself.\r\n\r\n    Mojolicious is copyright (c) 2013 Sebastian Riedel <sri@cpan.org>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}